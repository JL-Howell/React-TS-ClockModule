[{"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\index.tsx":"1","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\reportWebVitals.ts":"2","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\App.tsx":"3","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\Component\\Clock.tsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":647,"mtime":1607653980395,"results":"8","hashOfConfig":"6"},{"size":1650,"mtime":1607653955600,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"sdkuff",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\index.tsx",[],["20","21"],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\reportWebVitals.ts",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\App.tsx",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Red Badge\\React-Typescript-setup\\src\\Component\\Clock.tsx",["22"],"import React from 'react';\r\ntype ClockState = { //creating a new type called 'ClockState' \r\n    time: Date //houses a single property of 'time' which has an assigned datatype of 'Date'\r\n    //Date is a type that is built into TypeScript, just like strings, numbers, booleans, unions, tuples, etc.\r\n}\r\n\r\ntype AcceptedProps = {\r\n    testProp: string,\r\n    optionalProp?: string\r\n}\r\n//the question mark denotes that this prop is optional, meaning that our Clock.tsx component can optionally be passed a prop of 'optionalProp'. \r\n\r\nclass Clock extends React.Component<AcceptedProps, ClockState> { //inside <> is what we pass in props to our component\r\n    //and where we pass in the state.\r\n    constructor(props: AcceptedProps){\r\n        super(props)\r\n    }\r\n    \r\n    tick() {\r\n        this.setState ({\r\n            time: new Date()\r\n        })\r\n    };\r\n\r\n    componentWillMount() { //lifesycle method is initilizing our state before the component mounts\r\n        this.tick();\r\n    };\r\n\r\n    componentDidMount() { //is calling a setInterval() method that will update our state every second\r\n        setInterval(() => this.tick(), 1000);\r\n    };\r\n        \r\n    render(){\r\n        return(\r\n            <div> \r\n                <h1>{this.state.time.toLocaleTimeString()}</h1>\r\n                <p>{this.props.testProp}</p> \r\n                <p>{this.props.optionalProp}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//in the h1 we want to show the current time. We simply grab our state property of time, and calling the toLocalTimeString() method on it.\r\n//the method returns a string representing the time portion of the given date.\r\nexport default Clock;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":15,"column":5,"nodeType":"29","messageId":"30","endLine":17,"endColumn":6},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]